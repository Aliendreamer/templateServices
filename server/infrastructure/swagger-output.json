{
  "openapi": "3.0.0",
  "info": {
    "title": "Configuration service api",
    "version": "0.0.1",
    "description": "Configuration service be endpoints",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    },
    "contact": {
      "name": "A1 BG",
      "url": "https://a1.bg",
      "email": "SmartTVBG@a1.bg"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Local development server"
    }
  ],
  "paths": {
    "/configs": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Retrieve the list of configurations for a specific opco, environment, and device type",
        "description": "Returns full list of configurations for a specific opco, environment, and device type. For example, will return all configurations for opco \"A1BG\", environment \"development\", and device type \"smarttv\".",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opco",
            "description": "The opco to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "env",
            "description": "The environment to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "devicetype",
            "description": "The devicetype to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Full list of configurations for a specific opco, environment, and device type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Config"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Request can't be fullfilled due to missing information or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          },
          "500": {
            "description": "Request can't be fullfilled due to unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "deprecated": false
      }
    },
    "/config/{id}": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Retrieve the a single unique configuration based on id",
        "description": "A unique configuration for a specific opco, environment, and device type. For example, will return the configuration for opco \"A1BG\", environment \"development\", and device type \"smarttv\" with id \"xxx\".",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A unique configuration for a specific opco, environment, and device type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config"
                }
              }
            }
          },
          "400": {
            "description": "Request can't be fullfilled due to missing information or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          },
          "401": {
            "description": "Request can't be fullfilled due to unathorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Request can't be fullfilled due to keyloak public key error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/keycloak"
                }
              }
            }
          },
          "500": {
            "description": "Request can't be fullfilled due to unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "Config"
        ],
        "summary": "Update the unique configuration based on the id",
        "description": "Put request to change the data stored in the configuration",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "the unique configuration id to find and update the configuration"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "config",
            "in": "body",
            "required": true,
            "description": "the new updated json configuration object",
            "schema": {
              "$ref": "#/components/schemas/Config"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A unique configuration for a specific opco, environment, and device type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/operationSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Request can't be fullfilled due to missing information or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          },
          "401": {
            "description": "Request can't be fullfilled due to unathorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Request can't be fullfilled due to keyloak public key error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/keycloak"
                }
              }
            }
          },
          "500": {
            "description": "Request can't be fullfilled due to unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "example": "any"
                  }
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/config/activate": {
      "post": {
        "tags": [
          "Config"
        ],
        "summary": "Set to active the configuration for a specific opco, environment, and device type it targets",
        "description": "Changing the active status of the configuration to true and setup it ot return as active config for the unique combination of opco, environment, and device type it targets",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "id of the config to activate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A unique configuration for a specific opco, environment, and device type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/operationSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Request can't be fullfilled due to missing information or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          },
          "401": {
            "description": "Request can't be fullfilled due to unathorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Request can't be fullfilled due to keyloak public key error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/keycloak"
                }
              }
            }
          },
          "500": {
            "description": "Request can't be fullfilled due to unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "deprecated": false
      }
    },
    "/config/create": {
      "post": {
        "tags": [
          "Config"
        ],
        "summary": "create new unique configuration for a specific opco, environment, and device type using the last active configuration template",
        "description": "A unique configuration for a specific opco, environment, and device type. For example, will return the configuration for opco \"A1BG\", environment \"development\", and device type \"smarttv\" with id \"xxx\".",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opco",
            "description": "The opco to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "env",
            "description": "The environment to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "devicetype",
            "description": "The devicetype to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A unique configuration for a specific opco, environment, and device type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config"
                }
              }
            }
          },
          "400": {
            "description": "Request can't be fullfilled due to missing information or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          },
          "401": {
            "description": "Request can't be fullfilled due to unathorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Request can't be fullfilled due to keyloak public key error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/keycloak"
                }
              }
            }
          },
          "500": {
            "description": "Request can't be fullfilled due to unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "deprecated": false
      }
    },
    "/config/copy/{id}": {
      "post": {
        "tags": [
          "Config"
        ],
        "summary": "Retrieve the a single unique configuration based on id",
        "description": "A unique configuration for a specific opco, environment, and device type. For example, will return the configuration for opco \"A1BG\", environment \"development\", and device type \"smarttv\" with id \"xxx\".",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A unique configuration for a specific opco, environment, and device type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config"
                }
              }
            }
          },
          "400": {
            "description": "Request can't be fullfilled due to missing information or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          },
          "401": {
            "description": "Request can't be fullfilled due to unathorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Request can't be fullfilled due to keyloak public key error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/keycloak"
                }
              }
            }
          },
          "500": {
            "description": "Request can't be fullfilled due to unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "deprecated": false
      }
    },
    "/config/new/create": {
      "post": {
        "tags": [
          "Config"
        ],
        "summary": "create new unique empty configuration for a specific opco, environment, and device type using the last active configuration template",
        "description": "A unique configuration for a specific opco, environment, and device type. For example, will return the configuration for opco \"A1BG\", environment \"development\", and device type \"smarttv\" with id \"xxx\".",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opco",
            "description": "The opco to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "env",
            "description": "The environment to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "devicetype",
            "description": "The devicetype to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A unique configuration for a specific opco, environment, and device type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config"
                }
              }
            }
          },
          "400": {
            "description": "Request can't be fullfilled due to missing information or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          },
          "401": {
            "description": "Request can't be fullfilled due to unathorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Request can't be fullfilled due to keyloak public key error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/keycloak"
                }
              }
            }
          },
          "500": {
            "description": "Request can't be fullfilled due to unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "deprecated": false
      }
    },
    "/config/delete": {
      "post": {
        "tags": [
          "Config"
        ],
        "summary": "Retrieve the a single unique configuration for a specific opco, environment, and device type",
        "description": "A unique configuration for a specific opco, environment, and device type. For example, will return the configuration for opco \"A1BG\", environment \"development\", and device type \"smarttv\" with id \"xxx\".",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "The id to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully deleted the config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/operationSuccess"
                }
              }
            }
          },
          "400": {
            "description": "Request can't be fullfilled due to missing information or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          },
          "401": {
            "description": "Request can't be fullfilled due to unathorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Request can't be fullfilled due to keyloak public key error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/keycloak"
                }
              }
            }
          },
          "409": {
            "description": "Request can't be fullfilled due because this is current active config",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          },
          "500": {
            "description": "Request can't be fullfilled due to unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "deprecated": false
      }
    },
    "/opco/active": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Retrieve the a single unique configuration active for a specific opco, environment, and device type",
        "description": "The current active configuration for the request parameters,For example, will return the configuration for opco \"A1BG\", environment \"development\", and device type \"smarttv\" with id \"xxx\".",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "opco",
            "description": "The opco to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environment",
            "description": "The environment to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "devicetype",
            "description": "The devicetype to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The active configuration for a specific opco, environment, and device type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config"
                }
              }
            }
          },
          "400": {
            "description": "Request can't be fullfilled due to missing information or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          },
          "401": {
            "description": "Request can't be fullfilled due to unathorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Request can't be fullfilled due to keyloak public key error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/keycloak"
                }
              }
            }
          },
          "500": {
            "description": "Request can't be fullfilled due to unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/add/property": {
      "get": {
        "tags": [
          "Config"
        ],
        "summary": "Retrieve the a single unique configuration active for a specific opco, environment, and device type",
        "description": "The current active configuration for the request parameters,For example, will return the configuration for opco \"A1BG\", environment \"development\", and device type \"smarttv\" with id \"xxx\".",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "devicetype",
            "description": "The devicetype to filter configurations by",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The active configuration for a specific opco, environment, and device type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Config"
                }
              }
            }
          },
          "400": {
            "description": "Request can't be fullfilled due to missing information or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          },
          "401": {
            "description": "Request can't be fullfilled due to unathorized access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Request can't be fullfilled due to keyloak public key error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/keycloak"
                }
              }
            }
          },
          "500": {
            "description": "Request can't be fullfilled due to unexpected server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/badResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "opco": {
        "type": "string",
        "enum": [
          "A1BG",
          "A1HR",
          "A1AT",
          "A1MK",
          "A1AT",
          "A1Sl"
        ]
      },
      "environment": {
        "type": "string",
        "enum": [
          "development",
          "integration",
          "production"
        ]
      },
      "devicetype": {
        "type": "string",
        "enum": [
          "smarttv",
          "androidtv"
        ]
      },
      "Config": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "xx"
          },
          "content": {
            "type": "object",
            "properties": {
              "api_config": {
                "type": "object",
                "properties": {
                  "routes": {
                    "type": "object",
                    "properties": {
                      "api": {
                        "type": "string",
                        "example": "http://localhost:5000"
                      }
                    }
                  },
                  "castlabs_settings": {
                    "type": "object",
                    "properties": {
                      "autoplay": {
                        "type": "boolean",
                        "example": false
                      }
                    }
                  }
                }
              },
              "contentmarkers": {
                "type": "object",
                "properties": {
                  "blue": {
                    "type": "string",
                    "example": "xx"
                  }
                }
              }
            }
          },
          "date": {
            "type": "string",
            "example": "2024-04-16T08:37:15.025Z"
          },
          "opco": {
            "type": "string",
            "example": "A1_BG"
          },
          "version": {
            "type": "number",
            "example": 1
          },
          "deviceType": {
            "type": "string",
            "example": "smarttv"
          },
          "environment": {
            "type": "string",
            "example": "development"
          },
          "active": {
            "type": "boolean",
            "example": true
          }
        },
        "required": [
          "id",
          "content",
          "date",
          "opco",
          "version",
          "deviceType",
          "environment",
          "active"
        ]
      },
      "badResponse": {
        "type": "boolean",
        "example": false
      },
      "operationSuccess": {
        "type": "boolean",
        "example": true
      },
      "unauthorized": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "unauthorized"
          }
        }
      },
      "keycloak": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "failed to get public key to verify token"
          }
        }
      }
    },
    "examples": {
      "configExample": {
        "value": {
          "id": "xxxx",
          "version": 1,
          "opco": "A1_BG",
          "deviceType": "smarttv",
          "environment": "development",
          "active": true,
          "date": "2024-04-16T08:37:15.025Z",
          "content": {
            "api_config": {
              "routes": {
                "api": "http://localhost:5000"
              },
              "castlabs_settings": {
                "autoplay": false
              }
            },
            "contentmarkers": {
              "blue": "xx"
            }
          }
        },
        "summary": "Example of a small configuration object"
      }
    }
  }
}
{
	"id": "SmartvConfigServiceRealm",
	"realm": "SmartvConfigServiceRealm",
	"notBefore": 0,
	"defaultSignatureAlgorithm": "RS256",
	"revokeRefreshToken": false,
	"refreshTokenMaxReuse": 0,
	"accessTokenLifespan": 18000,
	"accessTokenLifespanForImplicitFlow": 18000,
	"ssoSessionIdleTimeout": 1800,
	"ssoSessionMaxLifespan": 36000,
	"ssoSessionIdleTimeoutRememberMe": 0,
	"ssoSessionMaxLifespanRememberMe": 0,
	"offlineSessionIdleTimeout": 2592000,
	"offlineSessionMaxLifespanEnabled": false,
	"offlineSessionMaxLifespan": 5184000,
	"clientSessionIdleTimeout": 0,
	"clientSessionMaxLifespan": 0,
	"clientOfflineSessionIdleTimeout": 0,
	"clientOfflineSessionMaxLifespan": 0,
	"accessCodeLifespan": 60,
	"accessCodeLifespanUserAction": 300,
	"accessCodeLifespanLogin": 1800,
	"actionTokenGeneratedByAdminLifespan": 43200,
	"actionTokenGeneratedByUserLifespan": 300,
	"oauth2DeviceCodeLifespan": 600,
	"oauth2DevicePollingInterval": 5,
	"enabled": true,
	"sslRequired": "none",
	"registrationAllowed": false,
	"registrationEmailAsUsername": false,
	"rememberMe": true,
	"verifyEmail": false,
	"loginWithEmailAllowed": true,
	"duplicateEmailsAllowed": false,
	"resetPasswordAllowed": false,
	"editUsernameAllowed": false,
	"bruteForceProtected": false,
	"permanentLockout": false,
	"maxFailureWaitSeconds": 900,
	"minimumQuickLoginWaitSeconds": 60,
	"waitIncrementSeconds": 60,
	"quickLoginCheckMilliSeconds": 1000,
	"maxDeltaTimeSeconds": 43200,
	"failureFactor": 30,
	"users": [
		{
			"username": "test",
			"enabled": true,
			"email": "test.test@a1.bg",
			"firstName": "Demo",
			"lastName": "Administrator",
			"credentials": [
				{
					"type": "password",
					"value": "demo"
				}
			],
			"realmRoles": [
				"uma_authorization",
				"offline_access"
			],
			"clientRoles": {
				"account": [
					"view-profile",
					"manage-account"
				]
			},
			"groups": [
				"/Administrators"
			]
		}
	],
	"roles": {
		"realm": [
			{
				"id": "6c40f68c-a2e1-48a8-89cb-b09547122aff",
				"name": "offline_access",
				"description": "${role_offline-access}",
				"composite": false,
				"clientRole": false,
				"containerId": "SmartvConfigServiceRealm",
				"attributes": {}
			},
			{
				"id": "e3592570-d992-4172-82db-1b2d60838594",
				"name": "user",
				"composite": false,
				"clientRole": false,
				"containerId": "SmartvConfigServiceRealm",
				"attributes": {}
			},
			{
				"id": "27774fab-6d77-4d4a-bf4f-8920a8ea40cc",
				"name": "uma_authorization",
				"composite": false,
				"clientRole": false,
				"containerId": "SmartvConfigServiceRealm",
				"attributes": {}
			}
		],
		"client": {
			"config-client": [],
			"realm-management": [
				{
					"id": "1fdbe039-fc84-49b0-9859-cfaccda335a2",
					"name": "manage-users",
					"description": "${role_manage-users}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "675ae2f9-3219-45e2-af6f-78268de723c9",
					"name": "view-clients",
					"description": "${role_view-clients}",
					"composite": true,
					"composites": {
						"client": {
							"realm-management": [
								"query-clients"
							]
						}
					},
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "e36e0a35-c67c-4fca-b182-a31f380495c7",
					"name": "manage-authorization",
					"description": "${role_manage-authorization}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "9a950cbd-b1af-477b-a7de-0e5bc4860df7",
					"name": "realm-admin",
					"description": "${role_realm-admin}",
					"composite": true,
					"composites": {
						"client": {
							"realm-management": [
								"manage-users",
								"view-clients",
								"manage-authorization",
								"view-events",
								"query-realms",
								"view-authorization",
								"query-groups",
								"impersonation",
								"manage-events",
								"view-realm",
								"query-clients",
								"view-users",
								"query-users",
								"manage-clients",
								"view-identity-providers",
								"manage-identity-providers",
								"manage-realm",
								"create-client"
							]
						}
					},
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "df6a940d-68d6-4d3b-80ba-acf372673f78",
					"name": "view-events",
					"description": "${role_view-events}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "04fe1425-b8ed-4f84-87c8-b0307662d820",
					"name": "query-realms",
					"description": "${role_query-realms}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "3743daf9-4df7-4cc6-ab90-d1897daaa924",
					"name": "view-authorization",
					"description": "${role_view-authorization}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "faf5b333-f560-4c31-b8af-8eb5aaba7757",
					"name": "impersonation",
					"description": "${role_impersonation}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "d2ee3a28-1e61-459a-83bb-c032eb5c2c88",
					"name": "query-groups",
					"description": "${role_query-groups}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "d3997f42-37a1-4884-bc5e-8570eb47a822",
					"name": "manage-events",
					"description": "${role_manage-events}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "4068291f-0d06-4667-bc42-f0e4301808df",
					"name": "query-clients",
					"description": "${role_query-clients}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "84c97d84-5d7d-4886-85f8-85246f8ee680",
					"name": "view-realm",
					"description": "${role_view-realm}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "48778030-42f5-4c76-bd63-47eaa6c0092e",
					"name": "view-users",
					"description": "${role_view-users}",
					"composite": true,
					"composites": {
						"client": {
							"realm-management": [
								"query-users",
								"query-groups"
							]
						}
					},
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "a42b029b-2d27-43b2-961e-1706e31ef957",
					"name": "query-users",
					"description": "${role_query-users}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "a79c4298-56ed-46cb-bd2a-7dc5144a20dd",
					"name": "manage-clients",
					"description": "${role_manage-clients}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "3f8447ca-e6f0-4947-876f-4f1ab5c5c9f4",
					"name": "view-identity-providers",
					"description": "${role_view-identity-providers}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "d627591b-b50c-4f55-960b-9bc8610c33f0",
					"name": "manage-identity-providers",
					"description": "${role_manage-identity-providers}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "d9753cb2-f72e-4221-88c2-bf8f6f76e0d5",
					"name": "manage-realm",
					"description": "${role_manage-realm}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				},
				{
					"id": "0ffb4e52-2593-4eb7-bdac-5b44be7c0dde",
					"name": "create-client",
					"description": "${role_create-client}",
					"composite": false,
					"clientRole": true,
					"containerId": "478b7b5a-c622-4fc7-966a-f3d975c96245",
					"attributes": {}
				}
			],
			"security-admin-console": [],
			"admin-cli": [],
			"account-console": [],
			"broker": [
				{
					"id": "43ffbd8f-95de-4707-94ae-396acf7c9510",
					"name": "read-token",
					"description": "${role_read-token}",
					"composite": false,
					"clientRole": true,
					"containerId": "b7b97b86-fe08-4d81-92e3-1bc33dffab3e",
					"attributes": {}
				}
			],
			"account": [
				{
					"id": "e9e11d2c-5388-4708-b998-f93bd8910cc0",
					"name": "manage-account",
					"description": "${role_manage-account}",
					"composite": true,
					"composites": {
						"client": {
							"account": [
								"manage-account-links"
							]
						}
					},
					"clientRole": true,
					"containerId": "beccc2ed-3187-4f98-b337-d0f35b03c802",
					"attributes": {}
				},
				{
					"id": "a8a898fe-0d21-40b9-98fb-b90b5f92020b",
					"name": "view-profile",
					"description": "${role_view-profile}",
					"composite": false,
					"clientRole": true,
					"containerId": "beccc2ed-3187-4f98-b337-d0f35b03c802",
					"attributes": {}
				},
				{
					"id": "525b39fe-c6cf-4136-84ce-7aaf1e8c651b",
					"name": "delete-account",
					"description": "${role_delete-account}",
					"composite": false,
					"clientRole": true,
					"containerId": "beccc2ed-3187-4f98-b337-d0f35b03c802",
					"attributes": {}
				},
				{
					"id": "7ef00f72-c299-4b27-acd3-ea3ff7270f3c",
					"name": "manage-account-links",
					"description": "${role_manage-account-links}",
					"composite": false,
					"clientRole": true,
					"containerId": "beccc2ed-3187-4f98-b337-d0f35b03c802",
					"attributes": {}
				}
			]
		}
	},
	"groups": [],
	"defaultRole": {
		"id": "c89a60a8-84fa-4edb-9e3e-05f385afcd5e",
		"name": "default-roles-SmartvConfigServiceRealm",
		"description": "${role_default-roles}",
		"composite": true,
		"clientRole": false,
		"containerId": "Marketing Console"
	},
	"requiredCredentials": [
		"password"
	],
	"otpPolicyType": "totp",
	"otpPolicyAlgorithm": "HmacSHA1",
	"otpPolicyInitialCounter": 0,
	"otpPolicyDigits": 6,
	"otpPolicyLookAheadWindow": 1,
	"otpPolicyPeriod": 30,
	"otpSupportedApplications": [
		"FreeOTP",
		"Google Authenticator"
	],
	"webAuthnPolicyRpEntityName": "keycloak",
	"webAuthnPolicySignatureAlgorithms": [
		"ES256"
	],
	"webAuthnPolicyRpId": "",
	"webAuthnPolicyAttestationConveyancePreference": "not specified",
	"webAuthnPolicyAuthenticatorAttachment": "not specified",
	"webAuthnPolicyRequireResidentKey": "not specified",
	"webAuthnPolicyUserVerificationRequirement": "not specified",
	"webAuthnPolicyCreateTimeout": 0,
	"webAuthnPolicyAvoidSameAuthenticatorRegister": false,
	"webAuthnPolicyAcceptableAaguids": [],
	"webAuthnPolicyPasswordlessRpEntityName": "keycloak",
	"webAuthnPolicyPasswordlessSignatureAlgorithms": [
		"ES256"
	],
	"webAuthnPolicyPasswordlessRpId": "",
	"webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
	"webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
	"webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
	"webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
	"webAuthnPolicyPasswordlessCreateTimeout": 0,
	"webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
	"webAuthnPolicyPasswordlessAcceptableAaguids": [],
	"clients": [
		{
			"id": "beccc2ed-3187-4f98-b337-d0f35b03c802",
			"clientId": "account",
			"name": "${client_account}",
			"rootUrl": "${authBaseUrl}",
			"baseUrl": "/realms/SmartvConfigServiceRealm/account/",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": [
				"/realms/SmartvConfigServiceRealm/account/*"
			],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "80912925-0abd-4074-90ff-49d53bbbbb3c",
			"clientId": "account-console",
			"name": "${client_account-console}",
			"rootUrl": "${authBaseUrl}",
			"baseUrl": "/realms/SmartvConfigServiceRealm/account/",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": [
				"/realms/SmartvConfigServiceRealm/account/*"
			],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {
				"pkce.code.challenge.method": "S256"
			},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"protocolMappers": [
				{
					"id": "27785e64-bfe6-4561-9d87-44f378950d06",
					"name": "audience resolve",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-audience-resolve-mapper",
					"consentRequired": false,
					"config": {}
				}
			],
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "9665d70d-d74b-4ad0-82bd-f98e78f5c45f",
			"clientId": "admin-cli",
			"name": "${client_admin-cli}",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": [],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": false,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": true,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "b7b97b86-fe08-4d81-92e3-1bc33dffab3e",
			"clientId": "broker",
			"name": "${client_broker}",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": [],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": true,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": false,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "fe09be74-6d82-4a15-9d7d-020d8f372b35",
			"clientId": "marketing_console",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"secret": "**********",
			"redirectUris": [
				"*"
			],
			"webOrigins": [
				"*"
			],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": true,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {
				"saml.assertion.signature": "false",
				"saml.force.post.binding": "false",
				"saml.multivalued.roles": "false",
				"saml.encrypt": "false",
				"saml.server.signature": "false",
				"saml.server.signature.keyinfo.ext": "false",
				"exclude.session.state.from.auth.response": "false",
				"saml_force_name_id_format": "false",
				"saml.client.signature": "false",
				"tls.client.certificate.bound.access.tokens": "false",
				"saml.authnstatement": "false",
				"display.on.consent.screen": "false",
				"saml.onetimeuse.condition": "false"
			},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": true,
			"nodeReRegistrationTimeout": -1,
			"protocolMappers": [
				{
					"id": "d6943eb8-ecba-4a02-82bc-36ab6edbd948",
					"name": "realm roles",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-realm-role-mapper",
					"consentRequired": false,
					"config": {
						"user.attribute": "foo",
						"access.token.claim": "true",
						"claim.name": "realm_access.roles",
						"jsonType.label": "String",
						"multivalued": "true"
					}
				}
			],
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "478b7b5a-c622-4fc7-966a-f3d975c96245",
			"clientId": "realm-management",
			"name": "${client_realm-management}",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": [],
			"webOrigins": [],
			"notBefore": 0,
			"bearerOnly": true,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": false,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		},
		{
			"id": "1e42424a-2c4b-43e9-8168-a9caa3059989",
			"clientId": "security-admin-console",
			"name": "${client_security-admin-console}",
			"rootUrl": "${authAdminUrl}",
			"baseUrl": "/admin/SmartvConfigServiceRealm/console/",
			"surrogateAuthRequired": false,
			"enabled": true,
			"alwaysDisplayInConsole": false,
			"clientAuthenticatorType": "client-secret",
			"redirectUris": [
				"/admin/SmartvConfigServiceRealm/console/*"
			],
			"webOrigins": [
				"+"
			],
			"notBefore": 0,
			"bearerOnly": false,
			"consentRequired": false,
			"standardFlowEnabled": true,
			"implicitFlowEnabled": false,
			"directAccessGrantsEnabled": false,
			"serviceAccountsEnabled": false,
			"publicClient": true,
			"frontchannelLogout": false,
			"protocol": "openid-connect",
			"attributes": {
				"pkce.code.challenge.method": "S256"
			},
			"authenticationFlowBindingOverrides": {},
			"fullScopeAllowed": false,
			"nodeReRegistrationTimeout": 0,
			"protocolMappers": [
				{
					"id": "3a5c98f3-161c-40dc-ba0f-071622c49b9c",
					"name": "locale",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "locale",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "locale",
						"jsonType.label": "String"
					}
				}
			],
			"defaultClientScopes": [
				"web-origins",
				"roles",
				"profile",
				"email"
			],
			"optionalClientScopes": [
				"address",
				"phone",
				"offline_access",
				"microprofile-jwt"
			]
		}
	],
	"clientScopes": [
		{
			"id": "1d9047ca-38dd-4d74-862b-4fba5efb5089",
			"name": "address",
			"description": "OpenID Connect built-in scope: address",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${addressScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "d75e75b7-ca16-4658-8641-bde97bdba624",
					"name": "address",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-address-mapper",
					"consentRequired": false,
					"config": {
						"user.attribute.formatted": "formatted",
						"user.attribute.country": "country",
						"user.attribute.postal_code": "postal_code",
						"userinfo.token.claim": "true",
						"user.attribute.street": "street",
						"id.token.claim": "true",
						"user.attribute.region": "region",
						"access.token.claim": "true",
						"user.attribute.locality": "locality"
					}
				}
			]
		},
		{
			"id": "24e6796b-71dd-421d-bec0-29405dc9673a",
			"name": "microprofile-jwt",
			"description": "Microprofile - JWT built-in scope",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "false"
			},
			"protocolMappers": [
				{
					"id": "5d79e6c1-8c93-4923-b0fb-ff6a600cd1d2",
					"name": "upn",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "username",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "upn",
						"jsonType.label": "String"
					}
				},
				{
					"id": "5688b206-de4e-45fd-a919-bd89a8ad9c22",
					"name": "groups",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-realm-role-mapper",
					"consentRequired": false,
					"config": {
						"multivalued": "true",
						"userinfo.token.claim": "true",
						"user.attribute": "foo",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "groups",
						"jsonType.label": "String"
					}
				}
			]
		},
		{
			"id": "6e201d2d-6000-473e-ae19-a3fb0e7ddedd",
			"name": "roles",
			"description": "OpenID Connect scope for add user roles to the access token",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "false",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${rolesScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "f13dcc5f-ec4d-48ed-9566-4f529dfe5230",
					"name": "audience resolve",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-audience-resolve-mapper",
					"consentRequired": false,
					"config": {}
				},
				{
					"id": "f66e349e-31aa-4a9e-be51-0372ad4fa9cf",
					"name": "client roles",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-client-role-mapper",
					"consentRequired": false,
					"config": {
						"user.attribute": "foo",
						"access.token.claim": "true",
						"claim.name": "resource_access.${client_id}.roles",
						"jsonType.label": "String",
						"multivalued": "true"
					}
				},
				{
					"id": "793226c9-e015-4683-aaa3-ed869f3ae12b",
					"name": "realm roles",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-realm-role-mapper",
					"consentRequired": false,
					"config": {
						"user.attribute": "foo",
						"access.token.claim": "true",
						"claim.name": "realm_access.roles",
						"jsonType.label": "String",
						"multivalued": "true"
					}
				}
			]
		},
		{
			"id": "fb630e2e-58b7-4e84-aaf5-d34a976ecdf2",
			"name": "email",
			"description": "OpenID Connect built-in scope: email",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${emailScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "0c4f6086-6184-4d0c-aca9-a9f47a67d25f",
					"name": "email",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "email",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "email",
						"jsonType.label": "String"
					}
				},
				{
					"id": "6fc29bc1-5d8b-430c-bc3a-6ca5e302067f",
					"name": "email verified",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "emailVerified",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "email_verified",
						"jsonType.label": "boolean"
					}
				}
			]
		},
		{
			"id": "2a128eef-a655-441a-8849-1181c1fcaa5e",
			"name": "role_list",
			"description": "SAML role list",
			"protocol": "saml",
			"attributes": {
				"consent.screen.text": "${samlRoleListScopeConsentText}",
				"display.on.consent.screen": "true"
			},
			"protocolMappers": [
				{
					"id": "7fa3ac4a-8637-46f0-a7c8-2c566205d32b",
					"name": "role list",
					"protocol": "saml",
					"protocolMapper": "saml-role-list-mapper",
					"consentRequired": false,
					"config": {
						"single": "false",
						"attribute.nameformat": "Basic",
						"attribute.name": "Role"
					}
				}
			]
		},
		{
			"id": "73c027a7-c23b-47b0-9d31-c88004cb3962",
			"name": "phone",
			"description": "OpenID Connect built-in scope: phone",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${phoneScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "ca1cd7b3-5bf8-4c37-8580-42dd478dd61d",
					"name": "phone number",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "phoneNumber",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "phone_number",
						"jsonType.label": "String"
					}
				},
				{
					"id": "2cf0631a-80f0-45ae-849e-e163067ba540",
					"name": "phone number verified",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "phoneNumberVerified",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "phone_number_verified",
						"jsonType.label": "boolean"
					}
				}
			]
		},
		{
			"id": "2f7225b5-a008-4aee-a999-f6cb5d1f6f1d",
			"name": "profile",
			"description": "OpenID Connect built-in scope: profile",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "true",
				"display.on.consent.screen": "true",
				"consent.screen.text": "${profileScopeConsentText}"
			},
			"protocolMappers": [
				{
					"id": "c9323c56-5a77-491a-b65a-58147468f0fd",
					"name": "birthdate",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "birthdate",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "birthdate",
						"jsonType.label": "String"
					}
				},
				{
					"id": "f8b901f5-fc4e-4b14-bc26-b8d0a5a39027",
					"name": "zoneinfo",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "zoneinfo",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "zoneinfo",
						"jsonType.label": "String"
					}
				},
				{
					"id": "860d1dcb-fb89-4c05-a948-096924ce39f6",
					"name": "username",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "username",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "preferred_username",
						"jsonType.label": "String"
					}
				},
				{
					"id": "85d7e41e-275b-48bf-a55a-7520f39445e4",
					"name": "gender",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "gender",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "gender",
						"jsonType.label": "String"
					}
				},
				{
					"id": "0dcb711c-023c-41f0-ba11-66b9add99f10",
					"name": "updated at",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "updatedAt",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "updated_at",
						"jsonType.label": "String"
					}
				},
				{
					"id": "285b5e8a-8efe-485c-a1d9-f079b67de5dc",
					"name": "profile",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "profile",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "profile",
						"jsonType.label": "String"
					}
				},
				{
					"id": "cb51c66e-f403-4c1c-a99c-3cdc1eeb67fe",
					"name": "family name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "lastName",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "family_name",
						"jsonType.label": "String"
					}
				},
				{
					"id": "3a5ceca9-9ff2-462e-a442-4edde1553ad6",
					"name": "picture",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "picture",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "picture",
						"jsonType.label": "String"
					}
				},
				{
					"id": "b57d7f8e-2e5e-40ab-9881-56ec0304aa76",
					"name": "locale",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "locale",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "locale",
						"jsonType.label": "String"
					}
				},
				{
					"id": "f44a2e83-5fd0-42a1-87f5-c70a2fc2c9ac",
					"name": "nickname",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "nickname",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "nickname",
						"jsonType.label": "String"
					}
				},
				{
					"id": "eebfb978-3064-42ba-9c91-e860e078f2ea",
					"name": "middle name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "middleName",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "middle_name",
						"jsonType.label": "String"
					}
				},
				{
					"id": "725b210e-bd41-49d4-86d7-64bf0302b3a3",
					"name": "full name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-full-name-mapper",
					"consentRequired": false,
					"config": {
						"id.token.claim": "true",
						"access.token.claim": "true",
						"userinfo.token.claim": "true"
					}
				},
				{
					"id": "bba836f7-d11f-4fca-9800-47cb6b69f17e",
					"name": "given name",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-property-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "firstName",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "given_name",
						"jsonType.label": "String"
					}
				},
				{
					"id": "0a92335b-d551-4018-9dce-fb7be9ce0847",
					"name": "website",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-usermodel-attribute-mapper",
					"consentRequired": false,
					"config": {
						"userinfo.token.claim": "true",
						"user.attribute": "website",
						"id.token.claim": "true",
						"access.token.claim": "true",
						"claim.name": "website",
						"jsonType.label": "String"
					}
				}
			]
		},
		{
			"id": "3a13402d-ac08-4377-8ec4-271864c82025",
			"name": "offline_access",
			"description": "OpenID Connect built-in scope: offline_access",
			"protocol": "openid-connect",
			"attributes": {
				"consent.screen.text": "${offlineAccessScopeConsentText}",
				"display.on.consent.screen": "true"
			}
		},
		{
			"id": "3607ee18-6d9f-4242-97e0-5a57f4019cf4",
			"name": "web-origins",
			"description": "OpenID Connect scope for add allowed web origins to the access token",
			"protocol": "openid-connect",
			"attributes": {
				"include.in.token.scope": "false",
				"display.on.consent.screen": "false",
				"consent.screen.text": ""
			},
			"protocolMappers": [
				{
					"id": "925fc3a1-7367-4613-bbc0-e48fcdcad83f",
					"name": "allowed web origins",
					"protocol": "openid-connect",
					"protocolMapper": "oidc-allowed-origins-mapper",
					"consentRequired": false,
					"config": {}
				}
			]
		}
	],
	"defaultDefaultClientScopes": [
		"role_list",
		"profile",
		"email",
		"roles",
		"web-origins"
	],
	"defaultOptionalClientScopes": [
		"offline_access",
		"address",
		"phone",
		"microprofile-jwt"
	],
	"browserSecurityHeaders": {
		"contentSecurityPolicyReportOnly": "",
		"xContentTypeOptions": "nosniff",
		"xRobotsTag": "none",
		"xFrameOptions": "SAMEORIGIN",
		"contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
		"xXSSProtection": "1; mode=block",
		"strictTransportSecurity": "max-age=31536000; includeSubDomains"
	},
	"smtpServer": {},
	"loginTheme": "MCTheme",
	"eventsEnabled": false,
	"eventsListeners": [
		"jboss-logging"
	],
	"enabledEventTypes": [],
	"adminEventsEnabled": false,
	"adminEventsDetailsEnabled": false,
	"identityProviders": [],
	"identityProviderMappers": [],
	"components": {
		"org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
			{
				"id": "60aa9699-7c5d-4332-b8a1-6a5cf019b5c6",
				"name": "Allowed Client Scopes",
				"providerId": "allowed-client-templates",
				"subType": "authenticated",
				"subComponents": {},
				"config": {
					"allow-default-scopes": [
						"true"
					]
				}
			},
			{
				"id": "5763b9d7-efe7-4968-b0dc-fb4751b1298c",
				"name": "Allowed Protocol Mapper Types",
				"providerId": "allowed-protocol-mappers",
				"subType": "anonymous",
				"subComponents": {},
				"config": {
					"allowed-protocol-mapper-types": [
						"saml-user-property-mapper",
						"saml-role-list-mapper",
						"oidc-usermodel-attribute-mapper",
						"oidc-usermodel-property-mapper",
						"oidc-address-mapper",
						"oidc-sha256-pairwise-sub-mapper",
						"oidc-full-name-mapper",
						"saml-user-attribute-mapper"
					]
				}
			},
			{
				"id": "4e41d686-2b06-4c15-9197-dbfcc00f9848",
				"name": "Max Clients Limit",
				"providerId": "max-clients",
				"subType": "anonymous",
				"subComponents": {},
				"config": {
					"max-clients": [
						"200"
					]
				}
			},
			{
				"id": "d5892b3a-8bfc-49e1-9337-2844306f4d2e",
				"name": "Full Scope Disabled",
				"providerId": "scope",
				"subType": "anonymous",
				"subComponents": {},
				"config": {}
			},
			{
				"id": "3e4a9d58-e6b0-475a-bfa6-f1b915a19c43",
				"name": "Allowed Protocol Mapper Types",
				"providerId": "allowed-protocol-mappers",
				"subType": "authenticated",
				"subComponents": {},
				"config": {
					"allowed-protocol-mapper-types": [
						"oidc-sha256-pairwise-sub-mapper",
						"saml-user-attribute-mapper",
						"saml-role-list-mapper",
						"oidc-full-name-mapper",
						"saml-user-property-mapper",
						"oidc-usermodel-attribute-mapper",
						"oidc-address-mapper",
						"oidc-usermodel-property-mapper"
					]
				}
			},
			{
				"id": "70925b9f-e9a3-4825-8f7a-b3f09e643ac4",
				"name": "Allowed Client Scopes",
				"providerId": "allowed-client-templates",
				"subType": "anonymous",
				"subComponents": {},
				"config": {
					"allow-default-scopes": [
						"true"
					]
				}
			},
			{
				"id": "ffde01ea-645e-42f6-907b-5b29ae151c8b",
				"name": "Trusted Hosts",
				"providerId": "trusted-hosts",
				"subType": "anonymous",
				"subComponents": {},
				"config": {
					"host-sending-registration-request-must-match": [
						"true"
					],
					"client-uris-must-match": [
						"true"
					]
				}
			},
			{
				"id": "3eb0dda8-3841-431d-8f9e-73b775fb6f77",
				"name": "Consent Required",
				"providerId": "consent-required",
				"subType": "anonymous",
				"subComponents": {},
				"config": {}
			}
		],
		"org.keycloak.keys.KeyProvider": [
			{
				"id": "074d1477-dc45-43f3-8e2b-9e498884159d",
				"name": "hmac-generated",
				"providerId": "hmac-generated",
				"subComponents": {},
				"config": {
					"priority": [
						"100"
					],
					"algorithm": [
						"HS256"
					]
				}
			},
			{
				"id": "ab8f7df2-7d70-47df-8cd5-ef0fcce310fd",
				"name": "aes-generated",
				"providerId": "aes-generated",
				"subComponents": {},
				"config": {
					"priority": [
						"100"
					]
				}
			},
			{
				"id": "0c9fd03a-3c43-4797-acf4-6ff7241bae5c",
				"name": "rsa-enc-generated",
				"providerId": "rsa-generated",
				"subComponents": {},
				"config": {
					"keyUse": [
						"enc"
					],
					"priority": [
						"100"
					]
				}
			},
			{
				"id": "a59db6b3-39a5-4e69-ac68-27061710c677",
				"name": "rsa-generated",
				"providerId": "rsa-generated",
				"subComponents": {},
				"config": {
					"keyUse": [
						"sig"
					],
					"priority": [
						"100"
					]
				}
			}
		]
	},
	"internationalizationEnabled": false,
	"supportedLocales": [
		""
	],
	"authenticationFlows": [
		{
			"id": "aac5da54-9bf7-45b9-ad1d-ff55c2268c94",
			"alias": "Account verification options",
			"description": "Method with which to verity the existing account",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "idp-email-verification",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "ALTERNATIVE",
					"priority": 20,
					"flowAlias": "Verify Existing Account by Re-authentication",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"id": "8ddec08d-4e9e-4635-9e69-305be4d1060e",
			"alias": "Authentication Options",
			"description": "Authentication options.",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "basic-auth",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "basic-auth-otp",
					"authenticatorFlow": false,
					"requirement": "DISABLED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "auth-spnego",
					"authenticatorFlow": false,
					"requirement": "DISABLED",
					"priority": 30,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"id": "7a43a245-ccea-45a7-8cf0-fca0f37bb007",
			"alias": "Browser - Conditional OTP",
			"description": "Flow to determine if the OTP is required for the authentication",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "auth-otp-form",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"id": "dcebd7c5-0cf6-436e-877b-ba7763bcf481",
			"alias": "Direct Grant - Conditional OTP",
			"description": "Flow to determine if the OTP is required for the authentication",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "direct-grant-validate-otp",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"id": "3e9ead95-9d72-4d13-b134-170a9c001435",
			"alias": "First broker login - Conditional OTP",
			"description": "Flow to determine if the OTP is required for the authentication",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "auth-otp-form",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"id": "58bda37b-bfbd-4552-965e-7c9f8414e5be",
			"alias": "Handle Existing Account",
			"description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "idp-confirm-link",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "REQUIRED",
					"priority": 20,
					"flowAlias": "Account verification options",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"id": "b33a9d60-a072-420e-aad4-0c6f29cd65fe",
			"alias": "Reset - Conditional OTP",
			"description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "conditional-user-configured",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "reset-otp",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"id": "a95ad72f-590c-4665-9856-fcb55f4447c3",
			"alias": "User creation or linking",
			"description": "Flow for the existing/non-existing user alternatives",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticatorConfig": "create unique user config",
					"authenticator": "idp-create-user-if-unique",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "ALTERNATIVE",
					"priority": 20,
					"flowAlias": "Handle Existing Account",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"id": "a4ac44bd-c523-44d7-9230-d2831842654d",
			"alias": "Verify Existing Account by Re-authentication",
			"description": "Reauthentication of existing account",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "idp-username-password-form",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "CONDITIONAL",
					"priority": 20,
					"flowAlias": "First broker login - Conditional OTP",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"id": "08170986-f720-40ef-8d6e-6d7b704b0683",
			"alias": "browser",
			"description": "browser based authentication",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "auth-cookie",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "auth-spnego",
					"authenticatorFlow": false,
					"requirement": "DISABLED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "identity-provider-redirector",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 25,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "ALTERNATIVE",
					"priority": 30,
					"flowAlias": "forms",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"id": "0ae0719a-c1cc-48ca-86a5-8e6c68b63162",
			"alias": "clients",
			"description": "Base authentication for clients",
			"providerId": "client-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "client-secret",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "client-jwt",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "client-secret-jwt",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 30,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "client-x509",
					"authenticatorFlow": false,
					"requirement": "ALTERNATIVE",
					"priority": 40,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"id": "1b4bae7b-517f-440b-b51f-9a7c17791d56",
			"alias": "direct grant",
			"description": "OpenID Connect Resource Owner Grant",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "direct-grant-validate-username",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "direct-grant-validate-password",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "CONDITIONAL",
					"priority": 30,
					"flowAlias": "Direct Grant - Conditional OTP",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"id": "f779494c-81ac-414a-8696-114109d3fde1",
			"alias": "docker auth",
			"description": "Used by Docker clients to authenticate against the IDP",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "docker-http-basic-authenticator",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"id": "1439a157-a8d1-4f83-9c5e-b981f5feb084",
			"alias": "first broker login",
			"description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticatorConfig": "review profile config",
					"authenticator": "idp-review-profile",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "REQUIRED",
					"priority": 20,
					"flowAlias": "User creation or linking",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"id": "9b19f0ed-3a73-4cd8-b521-1f7169ad63db",
			"alias": "forms",
			"description": "Username, password, otp and other auth forms.",
			"providerId": "basic-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "auth-username-password-form",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "CONDITIONAL",
					"priority": 20,
					"flowAlias": "Browser - Conditional OTP",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"id": "40134efe-a889-4ce4-b2e3-71bd73bfc86e",
			"alias": "http challenge",
			"description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "no-cookie-redirect",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "REQUIRED",
					"priority": 20,
					"flowAlias": "Authentication Options",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"id": "eed76ac9-e3c7-4d3a-a0c5-c00990887acc",
			"alias": "registration",
			"description": "registration flow",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "registration-page-form",
					"authenticatorFlow": true,
					"requirement": "REQUIRED",
					"priority": 10,
					"flowAlias": "registration form",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"id": "1ba95cfb-ba81-40d8-aeea-1a582bc4c771",
			"alias": "registration form",
			"description": "registration form",
			"providerId": "form-flow",
			"topLevel": false,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "registration-user-creation",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "registration-profile-action",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 40,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "registration-password-action",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 50,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "registration-recaptcha-action",
					"authenticatorFlow": false,
					"requirement": "DISABLED",
					"priority": 60,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		},
		{
			"id": "07700f1c-9890-419a-8005-12e426d0e877",
			"alias": "reset credentials",
			"description": "Reset credentials for a user if they forgot their password or something",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "reset-credentials-choose-user",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "reset-credential-email",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 20,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticator": "reset-password",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 30,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				},
				{
					"authenticatorFlow": true,
					"requirement": "CONDITIONAL",
					"priority": 40,
					"flowAlias": "Reset - Conditional OTP",
					"userSetupAllowed": false,
					"autheticatorFlow": true
				}
			]
		},
		{
			"id": "256c2b61-9568-4d48-9330-5744384ada46",
			"alias": "saml ecp",
			"description": "SAML ECP Profile Authentication Flow",
			"providerId": "basic-flow",
			"topLevel": true,
			"builtIn": true,
			"authenticationExecutions": [
				{
					"authenticator": "http-basic-authenticator",
					"authenticatorFlow": false,
					"requirement": "REQUIRED",
					"priority": 10,
					"userSetupAllowed": false,
					"autheticatorFlow": false
				}
			]
		}
	],
	"authenticatorConfig": [
		{
			"id": "a8ddf9d1-2b21-4ff1-80c1-6b4de2001528",
			"alias": "create unique user config",
			"config": {
				"require.password.update.after.registration": "false"
			}
		},
		{
			"id": "09aa1b25-4893-421c-abbe-ab35533989de",
			"alias": "review profile config",
			"config": {
				"update.profile.on.first.login": "missing"
			}
		}
	],
	"requiredActions": [
		{
			"alias": "CONFIGURE_TOTP",
			"name": "Configure OTP",
			"providerId": "CONFIGURE_TOTP",
			"enabled": true,
			"defaultAction": false,
			"priority": 10,
			"config": {}
		},
		{
			"alias": "terms_and_conditions",
			"name": "Terms and Conditions",
			"providerId": "terms_and_conditions",
			"enabled": false,
			"defaultAction": false,
			"priority": 20,
			"config": {}
		},
		{
			"alias": "UPDATE_PASSWORD",
			"name": "Update Password",
			"providerId": "UPDATE_PASSWORD",
			"enabled": true,
			"defaultAction": false,
			"priority": 30,
			"config": {}
		},
		{
			"alias": "UPDATE_PROFILE",
			"name": "Update Profile",
			"providerId": "UPDATE_PROFILE",
			"enabled": true,
			"defaultAction": false,
			"priority": 40,
			"config": {}
		},
		{
			"alias": "VERIFY_EMAIL",
			"name": "Verify Email",
			"providerId": "VERIFY_EMAIL",
			"enabled": true,
			"defaultAction": false,
			"priority": 50,
			"config": {}
		},
		{
			"alias": "delete_account",
			"name": "Delete Account",
			"providerId": "delete_account",
			"enabled": false,
			"defaultAction": false,
			"priority": 60,
			"config": {}
		},
		{
			"alias": "update_user_locale",
			"name": "Update User Locale",
			"providerId": "update_user_locale",
			"enabled": true,
			"defaultAction": false,
			"priority": 1000,
			"config": {}
		}
	],
	"browserFlow": "browser",
	"registrationFlow": "registration",
	"directGrantFlow": "direct grant",
	"resetCredentialsFlow": "reset credentials",
	"clientAuthenticationFlow": "clients",
	"dockerAuthenticationFlow": "docker auth",
	"attributes": {
		"cibaBackchannelTokenDeliveryMode": "poll",
		"cibaExpiresIn": "120",
		"cibaAuthRequestedUserHint": "login_hint",
		"oauth2DeviceCodeLifespan": "600",
		"clientOfflineSessionMaxLifespan": "0",
		"oauth2DevicePollingInterval": "5",
		"clientSessionIdleTimeout": "0",
		"clientSessionMaxLifespan": "0",
		"parRequestUriLifespan": "60",
		"clientOfflineSessionIdleTimeout": "0",
		"cibaInterval": "5"
	},
	"keycloakVersion": "15.0.0",
	"userManagedAccessAllowed": false,
	"clientProfiles": {
		"profiles": []
	},
	"clientPolicies": {
		"policies": []
	}
}